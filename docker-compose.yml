services:
  backend_service:
    build:
      context: . # Root directory for build context
      dockerfile: backend/Dockerfile 
    container_name: upload_benchmark
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - redis
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MONGO_URI=mongodb://mongodb:27017
      - REDIS_HOST=redis
    env_file:
      - .env
    volumes:
      - .env:/app/.env
      - ./backend/templates:/app/backend/templates
      - ./backend/tmp:/app/backend/tmp
    networks:
      - talentsync_network

  mongodb:
    image: mongo:7
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - talentsync_network

  redis:
    image: redis/redis-stack:latest
    container_name: redis
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis_data:/data
    networks:
      - talentsync_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  dramatiq_worker:
    build:
      context: . 
      dockerfile: backend/Dockerfile
    container_name: dramatiq_worker
    command: dramatiq backend.dramatiq_config.background_task --processes 1 --threads 4
    depends_on:
      - redis
      - mongodb
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MONGO_URI=mongodb://mongodb:27017
      - REDIS_HOST=redis
    env_file:
      - .env
    volumes:
      - .env:/app/.env
      - ./backend/templates:/app/backend/templates
      - ./backend/tmp:/app/backend/tmp
      - ./backend/logs:/app/backend/logs
    networks:
      - talentsync_network
    

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - talentsync_network

  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    ports:
      - "9091:9091"
    networks:
      - talentsync_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - .backend/monitoring/grafana/provisioning/dashboards:/var/lib/grafana/dashboards
      - .backend/monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - talentsync_network
    restart: always

networks:
  talentsync_network:

volumes:
  mongo_data:
  prometheus_data:
  grafana_data:
  redis_data:
